name: Tauri Action

on:
  push:
    branches: [production]
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # ─── Windows ────────────────────────────
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            args: ''
          # ─── macOS (Intel) ──────────────────────
          - platform: macos-latest
            target: x86_64-apple-darwin
            args: '--target x86_64-apple-darwin'
          # ─── macOS (Apple Silicon) ─────────────
          - platform: macos-latest
            target: aarch64-apple-darwin
            args: '--target aarch64-apple-darwin'
          # ─── Linux ─────────────────────────────
          - platform: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            args: '--target x86_64-unknown-linux-gnu'

    runs-on: ${{ matrix.platform }}

    steps:
      # 1️⃣ Check out source
      - uses: actions/checkout@v4

      # 2️⃣ pnpm first (required before setup‑node cache=pnpm)
      - uses: pnpm/action-setup@v2
        with:
          version: 10

      # 3️⃣ Node.js (enables pnpm‑lock cache)
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # 4️⃣ Cache Rust build artifacts
      - uses: Swatinem/rust-cache@v2

      # 5️⃣ Install Rust toolchain & cross‑targets
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      # 6️⃣ System packages for GTK / WebKit & AppImage
      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: brew update (macOS)
        if: startsWith(matrix.platform, 'macos')
        run: brew update || true

      # 7️⃣ Install JS workspace deps
      - run: pnpm install

      # 8️⃣ Optional shared package build (remove if 미사용)
      - run: pnpm build:api
        if: exists(packages/api)

      # 9️⃣ Build, sign & release via tauri‑action
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}   # write access to muvel-public
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          # — Repo / tag info —
          owner: KimuSoft
          repo: muvel-public
          tagName: v__VERSION__
          releaseName: "Muvel v__VERSION__"
          releaseBody: |
            ## 뮤블 v__VERSION__ 버전 업데이트
            아직 개발자가 설명을 작성하지 않았습니다.          releaseDraft: false
          prerelease: true

          # — Paths (monorepo) —
          projectPath: packages/tauri-app
          tauriScript: pnpm tauri

          # — Updater JSON —
          includeUpdaterJson: true        # latest.json + .sig 업로드
          updaterJsonPreferNsis: true     # Windows는 setup.exe 우선

          # — Extra build flags per matrix —
          args: ${{ matrix.args }}
