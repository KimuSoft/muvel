name: Build and Release Tauri App
# ./tauri-action.yml을 사용하세요.

on:
#  push:
#    branches:
#      - production
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            label: windows-x64
          - os: macos-13 # Intel runner
            target: x86_64-apple-darwin
            label: macos-x64
          - os: macos-14 # Apple Silicon runner
            target: aarch64-apple-darwin
            label: macos-arm64
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            label: linux-x64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }} # NOTE: "targets" (plural) fixes missing stdlib error

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libappindicator3-dev \
            librsvg2-dev \
            libsoup-3.0-0 \
            libsoup-3.0-dev \
            libwebkit2gtk-4.1-dev \
            gir1.2-javascriptcoregtk-4.1

      - name: Install dependencies (macOS)
        if: startsWith(matrix.os, 'macos')
        run: brew update || true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # LTS, fewer gradle warnings than v22

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Install app dependencies
        run: pnpm install

      - name: Build API types package
        run: pnpm build:api

      - name: Build Tauri app (macOS)
        if: startsWith(matrix.os, 'macos')
        run: pnpm run build:tauri:prod --bundles dmg --target ${{ matrix.target }}

      - name: Build Tauri app (non-macOS)
        if: "!startsWith(matrix.os, 'macos')"
        run: pnpm run build:tauri:prod --target ${{ matrix.target }}

      # ────[ Rename Build Artifacts ]──────────────────────────
      - name: Rename Build Artifacts (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          mv packages/tauri-app/src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg \
            packages/tauri-app/src-tauri/target/${{ matrix.target }}/release/bundle/dmg/muvel-${{ matrix.label }}.dmg

      - name: Rename Build Artifacts (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          mv packages/tauri-app/src-tauri/target/${{ matrix.target }}/release/bundle/appimage/*.AppImage \
            packages/tauri-app/src-tauri/target/${{ matrix.target }}/release/bundle/appimage/muvel-${{ matrix.label }}.AppImage

      - name: Rename Build Artifacts (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Move-Item "packages/tauri-app/src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis\*-setup.exe" `
            "packages/tauri-app/src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis/muvel-windows-x64-setup.exe"

          Move-Item "packages/tauri-app/src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi\*.msi" `
            "packages/tauri-app/src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/muvel-windows-x64.msi"

      # ────[ Upload artifacts ]──────────────────────────
      - name: Upload Windows Portable EXE
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-windows-exe
          path: packages/tauri-app/src-tauri/target/${{ matrix.target }}/release/*.exe

      - name: Upload Windows NSIS Installer
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-windows-nsis
          path: packages/tauri-app/src-tauri/target/${{ matrix.target }}/release/bundle/nsis/*-setup.exe

      - name: Upload Windows MSI Installer
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-windows-msi
          path: packages/tauri-app/src-tauri/target/${{ matrix.target }}/release/bundle/msi/*.msi

      - name: Upload macOS DMG
        if: startsWith(matrix.os, 'macos')
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-macos-dmg-${{ matrix.target }}
          path: packages/tauri-app/src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg

      - name: Upload Linux AppImage
        if: matrix.os == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-linux-appimage
          path: packages/tauri-app/src-tauri/target/${{ matrix.target }}/release/bundle/appimage/*.AppImage

  # ────[ Release job ]──────────────────────────
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded artifacts for debugging
        run: ls -R artifacts

      - name: Get package.json version
        id: package_version
        run: echo "PACKAGE_VERSION=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Create Release on Public Repository
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.PUBLIC_REPO_TOKEN }}
          repository: KimuSoft/muvel-public
          files: |
            artifacts/tauri-app-windows-exe/*.exe
            artifacts/tauri-app-windows-nsis/*-setup.exe
            artifacts/tauri-app-windows-msi/*.msi
            artifacts/tauri-app-macos-dmg-x86_64-apple-darwin/*.dmg
            artifacts/tauri-app-macos-dmg-aarch64-apple-darwin/*.dmg
            artifacts/tauri-app-linux-appimage/*.AppImage
          tag_name: v${{ steps.package_version.outputs.PACKAGE_VERSION }}
          name: "v${{ steps.package_version.outputs.PACKAGE_VERSION }}"
          body: |
            자동 빌드된 Tauri 앱입니다.
            production 브랜치 푸시 시 자동 릴리스.
            package.json 버전: ${{ steps.package_version.outputs.PACKAGE_VERSION }}
          draft: false
          prerelease: false
